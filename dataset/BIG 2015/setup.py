from tqdm import tqdm
from asm import ASM

import os
import inspect

SCRIPT_DIR = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))

path = f"{SCRIPT_DIR}/train"
dir_list = os.listdir(path)

with open(f"{SCRIPT_DIR}/trainLabels.csv", "r") as f:
    data = f.readlines()

labels = {}

for line in data:
    line = line.split(",")
    digest = line[0].strip()
    label = line[1].strip()
    labels[digest] = label

with open(f"{SCRIPT_DIR}/data.csv", "w") as f:
    f.write("id,asm_commands_call,asm_commands_add,asm_commands_cdq,asm_commands_cld," +
            "asm_commands_cli,asm_commands_cmc,asm_commands_cmp,asm_commands_cwd," +
            "asm_commands_daa,asm_commands_dd,asm_commands_dec,asm_commands_dw," +
            "asm_commands_endp,asm_commands_faddp,asm_commands_fchs,asm_commands_fdiv," +
            "asm_commands_fdivr,asm_commands_fistp,asm_commands_fld,asm_commands_fstp," +
            "asm_commands_fword,asm_commands_fxch,asm_commands_imul,asm_commands_in," +
            "asm_commands_inc,asm_commands_ins,asm_commands_jb,asm_commands_je," +
            "asm_commands_jg,asm_commands_jl,asm_commands_jmp,asm_commands_jnb," +
            "asm_commands_jno,asm_commands_jo,asm_commands_jz,asm_commands_lea," +
            "asm_commands_mov,asm_commands_mul,asm_commands_not,asm_commands_or," +
            "asm_commands_out,asm_commands_outs,asm_commands_pop,asm_commands_push," +
            "asm_commands_rcl,asm_commands_rcr,asm_commands_rep,asm_commands_ret," +
            "asm_commands_rol,asm_commands_ror,asm_commands_sal,asm_commands_sar," +
            "asm_commands_sbb,asm_commands_scas,asm_commands_shl,asm_commands_shr," +
            "asm_commands_sidt,asm_commands_stc,asm_commands_std,asm_commands_sti," +
            "asm_commands_stos,asm_commands_sub,asm_commands_test,asm_commands_wait," +
            "asm_commands_xchg,asm_commands_xor,class\n")

    for i in tqdm(range(0, len(dir_list)), desc="File analyzed"):
        file = dir_list[i]
        if file.find(".asm") != -1:
            asm = ASM(f"{path}/{file}")
            digest = file[:-4]

            f.write(f"{digest},")

            for j in range(0, len(asm.assembly_features)):
                f.write(f"{asm.assembly_features[j]},")

            f.write(f"{int(labels[digest])-1}")
            f.write("\n")
